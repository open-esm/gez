"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["5470"],{64730:function(e,n,r){r.r(n),r.d(n,{default:()=>a});var i=r(31549),d=r(6603);function t(e){let n=Object.assign({h1:"h1",a:"a",p:"p",code:"code",pre:"pre",h2:"h2",h3:"h3",h4:"h4",ul:"ul",li:"li",strong:"strong"},(0,d.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h1,{id:"app",children:["App",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#app",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"App"})," is de applicatie abstractie van het Gez-framework, dat een uniforme interface biedt voor het beheren van de levenscyclus van de applicatie, statische bronnen en server-side rendering."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",meta:'title="entry.node.ts"',children:"export default {\n  // Ontwikkelomgeving configuratie\n  async devApp(gez) {\n    return import('@gez/rspack').then((m) =>\n      m.createRspackHtmlApp(gez, {\n        config(rc) {\n          // Aangepaste Rspack configuratie\n        }\n      })\n    );\n  }\n}\n"})}),"\n",(0,i.jsxs)(n.h2,{id:"type-definitie",children:["Type Definitie",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#type-definitie",children:"#"})]}),"\n",(0,i.jsxs)(n.h3,{id:"app-1",children:["App",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#app-1",children:"#"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"interface App {\n  middleware: Middleware;\n  render: (options?: RenderContextOptions) => Promise<RenderContext>;\n  build?: () => Promise<boolean>;\n  destroy?: () => Promise<boolean>;\n}\n"})}),"\n",(0,i.jsxs)(n.h4,{id:"middleware",children:["middleware",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#middleware",children:"#"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Type"}),": ",(0,i.jsx)(n.code,{children:"Middleware"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Middleware voor het behandelen van statische bronnen."}),"\n",(0,i.jsx)(n.p,{children:"Ontwikkelomgeving:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Behandelt verzoeken voor statische bronnen van de broncode"}),"\n",(0,i.jsx)(n.li,{children:"Ondersteunt real-time compilatie en hot reload"}),"\n",(0,i.jsx)(n.li,{children:"Gebruikt no-cache caching strategie"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Productieomgeving:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Behandelt gebouwde statische bronnen"}),"\n",(0,i.jsx)(n.li,{children:"Ondersteunt langdurige caching van onveranderlijke bestanden (.final.xxx)"}),"\n",(0,i.jsx)(n.li,{children:"Geoptimaliseerde bron laadstrategie"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"server.use(gez.middleware);\n"})}),"\n",(0,i.jsxs)(n.h4,{id:"render",children:["render",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#render",children:"#"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Type"}),": ",(0,i.jsx)(n.code,{children:"(options?: RenderContextOptions) => Promise<RenderContext>"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Server-side rendering functie. Biedt verschillende implementaties afhankelijk van de omgeving:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Productieomgeving (start): Laadt het gebouwde server-side ingangsbestand (entry.server) en voert rendering uit"}),"\n",(0,i.jsx)(n.li,{children:"Ontwikkelomgeving (dev): Laadt het server-side ingangsbestand uit de broncode en voert rendering uit"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const rc = await gez.render({\n  params: { url: '/page' }\n});\nres.end(rc.html);\n"})}),"\n",(0,i.jsxs)(n.h4,{id:"build",children:["build",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#build",children:"#"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Type"}),": ",(0,i.jsx)(n.code,{children:"() => Promise<boolean>"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Productieomgeving bouwfunctie. Gebruikt voor het bundelen en optimaliseren van bronnen. Retourneert true bij succesvolle bouw, false bij falen."}),"\n",(0,i.jsxs)(n.h4,{id:"destroy",children:["destroy",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#destroy",children:"#"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Type"}),": ",(0,i.jsx)(n.code,{children:"() => Promise<boolean>"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Bronnen opruimfunctie. Gebruikt voor het afsluiten van de server, verbreken van verbindingen, etc. Retourneert true bij succesvolle opruiming, false bij falen."})]})}function s(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,d.ah)(),e.components);return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(t,{...e})}):t(e)}let a=s;s.__RSPRESS_PAGE_META={},s.__RSPRESS_PAGE_META["nl%2Fapi%2Fcore%2Fapp.md"]={toc:[{text:"Type Definitie",id:"type-definitie",depth:2},{text:"App",id:"app-1",depth:3},{text:"middleware",id:"middleware",depth:4},{text:"render",id:"render",depth:4},{text:"build",id:"build",depth:4},{text:"destroy",id:"destroy",depth:4}],title:"App",headingTitle:"App",frontmatter:{titleSuffix:"Gez Framework Applicatie Abstractie Interface",description:"Gedetailleerde uitleg over de App-interface van het Gez-framework, inclusief applicatie levenscyclusbeheer, statische bronbehandeling en server-side rendering functionaliteiten, om ontwikkelaars te helpen de kernfunctionaliteiten van de applicatie te begrijpen en te gebruiken.",head:[["meta",{property:"keywords",content:"Gez, App, Applicatie Abstractie, Levenscyclus, Statische Bronnen, Server-side Rendering, API"}]]}}}}]);