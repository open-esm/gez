"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["5656"],{38107:function(e,n,r){r.r(n),r.d(n,{default:()=>o});var i=r(31549),a=r(6603);function s(e){let n=Object.assign({h1:"h1",a:"a",p:"p",ul:"ul",li:"li",strong:"strong",code:"code",h2:"h2",h3:"h3",pre:"pre",div:"div",ol:"ol"},(0,a.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h1,{id:"pad-alias",children:["Pad Alias",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#pad-alias",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"Pad alias (Path Alias) is een mechanisme voor het mappen van module importpaden, waarmee ontwikkelaars korte, semantische identificatoren kunnen gebruiken in plaats van volledige modulepaden. In Gez biedt het pad alias mechanisme de volgende voordelen:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Vereenvoudiging van importpaden"}),": Gebruik semantische aliassen in plaats van lange relatieve paden, wat de leesbaarheid van de code verbetert"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Vermijden van diepe nesting"}),": Elimineer onderhoudsproblemen veroorzaakt door meerdere directoryniveaus (bijv. ",(0,i.jsx)(n.code,{children:"../../../../"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Typeveiligheid"}),": Volledige integratie met het typesysteem van TypeScript, wat codecompletion en typecontrole biedt"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Module resolutie optimalisatie"}),": Verbeter de module resolutieprestaties door vooraf gedefinieerde padmapping"]}),"\n"]}),"\n",(0,i.jsxs)(n.h2,{id:"standaard-alias-mechanisme",children:["Standaard Alias Mechanisme",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#standaard-alias-mechanisme",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"Gez gebruikt een automatisch aliasmechanisme op basis van servicenaam (Service Name), waarbij conventie boven configuratie staat. Dit ontwerp heeft de volgende kenmerken:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Automatische configuratie"}),": Genereer automatisch aliassen op basis van het ",(0,i.jsx)(n.code,{children:"name"})," veld in ",(0,i.jsx)(n.code,{children:"package.json"}),", zonder handmatige configuratie"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Uniforme normen"}),": Zorg ervoor dat alle servicemodules consistente naamgevings- en referentienormen volgen"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Typeondersteuning"}),": Werk samen met het commando ",(0,i.jsx)(n.code,{children:"npm run build:dts"})," om automatisch type declaratiebestanden te genereren, wat type-inferentie tussen services mogelijk maakt"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Voorspelbaarheid"}),": Leid het referentiepad van de module af via de servicenaam, wat de onderhoudskosten verlaagt"]}),"\n"]}),"\n",(0,i.jsxs)(n.h2,{id:"configuratie-uitleg",children:["Configuratie Uitleg",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#configuratie-uitleg",children:"#"})]}),"\n",(0,i.jsxs)(n.h3,{id:"packagejson-configuratie",children:["package.json Configuratie",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#packagejson-configuratie",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["Definieer in ",(0,i.jsx)(n.code,{children:"package.json"})," de naam van de service via het ",(0,i.jsx)(n.code,{children:"name"})," veld. Deze naam wordt gebruikt als het standaard aliasvoorvoegsel van de service:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",meta:'title="package.json"',children:'{\n    "name": "your-app-name"\n}\n'})}),"\n",(0,i.jsxs)(n.h3,{id:"tsconfigjson-configuratie",children:["tsconfig.json Configuratie",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#tsconfigjson-configuratie",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["Om ervoor te zorgen dat TypeScript aliaspaden correct kan oplossen, moet je ",(0,i.jsx)(n.code,{children:"paths"})," mapping configureren in ",(0,i.jsx)(n.code,{children:"tsconfig.json"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",meta:'title="tsconfig.json"',children:'{\n    "compilerOptions": {\n        "paths": {\n            "your-app-name/src/*": [\n                "./src/*"\n            ],\n            "your-app-name/*": [\n                "./*"\n            ]\n        }\n    }\n}\n'})}),"\n",(0,i.jsxs)(n.h2,{id:"gebruiksvoorbeelden",children:["Gebruiksvoorbeelden",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#gebruiksvoorbeelden",children:"#"})]}),"\n",(0,i.jsxs)(n.h3,{id:"importeren-van-service-interne-modules",children:["Importeren van Service Interne Modules",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#importeren-van-service-interne-modules",children:"#"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"// Gebruik alias om te importeren\nimport { MyComponent } from 'your-app-name/src/components';\n\n// Gelijkwaardige relatieve pad import\nimport { MyComponent } from '../components';\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"importeren-van-andere-service-modules",children:["Importeren van Andere Service Modules",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#importeren-van-andere-service-modules",children:"#"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"// Importeer componenten van andere services\nimport { SharedComponent } from 'other-service/src/components';\n\n// Importeer hulpfuncties van andere services\nimport { utils } from 'other-service/src/utils';\n"})}),"\n",(0,i.jsxs)(n.div,{className:"rspress-directive tip",children:[(0,i.jsx)(n.div,{className:"rspress-directive-title",children:"Beste Praktijken"}),(0,i.jsxs)(n.div,{className:"rspress-directive-content",children:["\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Gebruik bij voorkeur aliaspaden in plaats van relatieve paden"}),"\n",(0,i.jsx)(n.li,{children:"Houd aliaspaden semantisch en consistent"}),"\n",(0,i.jsx)(n.li,{children:"Vermijd te veel directoryniveaus in aliaspaden"}),"\n"]}),"\n"]})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"// Importeer componenten\nimport { Button } from 'your-app-name/src/components';\nimport { Layout } from 'your-app-name/src/components/layout';\n\n// Importeer hulpfuncties\nimport { formatDate } from 'your-app-name/src/utils';\nimport { request } from 'your-app-name/src/utils/request';\n\n// Importeer typedefinities\nimport type { UserInfo } from 'your-app-name/src/types';\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"importeren-over-services",children:["Importeren over Services",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#importeren-over-services",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"Wanneer module linking (Module Link) is geconfigureerd, kun je op dezelfde manier modules van andere services importeren:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"// Importeer componenten van een externe service\nimport { Header } from 'remote-service/src/components';\n\n// Importeer hulpfuncties van een externe service\nimport { logger } from 'remote-service/src/utils';\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"aangepaste-aliassen",children:["Aangepaste Aliassen",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#aangepaste-aliassen",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"Voor third-party packages of speciale scenario's kun je aangepaste aliassen configureren via het Gez configuratiebestand:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.node.ts"',children:"export default {\n    async devApp(gez) {\n        return import('@gez/rspack').then((m) =>\n            m.createApp(gez, (buildContext) => {\n                buildContext.config.resolve = {\n                    ...buildContext.config.resolve,\n                    alias: {\n                        ...buildContext.config.resolve?.alias,\n                        // Configureer een specifieke build versie voor Vue\n                        'vue$': 'vue/dist/vue.esm.js',\n                        // Configureer korte aliassen voor veelgebruikte directories\n                        '@': './src',\n                        '@components': './src/components'\n                    }\n                }\n            })\n        );\n    }\n} satisfies GezOptions;\n"})}),"\n",(0,i.jsxs)(n.div,{className:"rspress-directive warning",children:[(0,i.jsx)(n.div,{className:"rspress-directive-title",children:"Belangrijke Opmerkingen"}),(0,i.jsxs)(n.div,{className:"rspress-directive-content",children:["\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Voor bedrijfsmodules wordt aanbevolen om altijd het standaard aliasmechanisme te gebruiken om consistentie in het project te behouden"}),"\n",(0,i.jsx)(n.li,{children:"Aangepaste aliassen worden voornamelijk gebruikt voor speciale vereisten van third-party packages of om de ontwikkelervaring te optimaliseren"}),"\n",(0,i.jsx)(n.li,{children:"Overmatig gebruik van aangepaste aliassen kan de onderhoudbaarheid van de code en build optimalisatie be\xefnvloeden"}),"\n"]}),"\n"]})]})]})}function t(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(s,{...e})}):s(e)}let o=t;t.__RSPRESS_PAGE_META={},t.__RSPRESS_PAGE_META["nl%2Fguide%2Fessentials%2Falias.md"]={toc:[{text:"Standaard Alias Mechanisme",id:"standaard-alias-mechanisme",depth:2},{text:"Configuratie Uitleg",id:"configuratie-uitleg",depth:2},{text:"package.json Configuratie",id:"packagejson-configuratie",depth:3},{text:"tsconfig.json Configuratie",id:"tsconfigjson-configuratie",depth:3},{text:"Gebruiksvoorbeelden",id:"gebruiksvoorbeelden",depth:2},{text:"Importeren van Service Interne Modules",id:"importeren-van-service-interne-modules",depth:3},{text:"Importeren van Andere Service Modules",id:"importeren-van-andere-service-modules",depth:3},{text:"Importeren over Services",id:"importeren-over-services",depth:3},{text:"Aangepaste Aliassen",id:"aangepaste-aliassen",depth:3}],title:"Pad Alias",headingTitle:"Pad Alias",frontmatter:{titleSuffix:"Gez Framework Gids voor Module Import Pad Mapping",description:"Gedetailleerde uitleg over het pad alias mechanisme van het Gez framework, inclusief vereenvoudiging van importpaden, vermijden van diepe nesting, typeveiligheid en module resolutie optimalisatie, om ontwikkelaars te helpen de onderhoudbaarheid van code te verbeteren.",head:[["meta",{property:"keywords",content:"Gez, Pad Alias, Path Alias, TypeScript, Module Import, Pad Mapping, Code Onderhoudbaarheid"}]]}}}}]);