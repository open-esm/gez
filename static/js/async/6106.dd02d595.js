"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["6106"],{77187:function(a,e,i){i.r(e),i.d(e,{default:()=>c});var n=i(31549),r=i(6603);function o(a){let e=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",ul:"ul",li:"li",strong:"strong",h3:"h3",ol:"ol",code:"code",pre:"pre",div:"div"},(0,r.ah)(),a.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.h1,{id:"rspack",children:["Rspack",(0,n.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#rspack",children:"#"})]}),"\n",(0,n.jsxs)(e.p,{children:["Gez opiera się na systemie budowania ",(0,n.jsx)(e.a,{href:"https://rspack.dev/",target:"_blank",rel:"noopener noreferrer",children:"Rspack"}),", w pełni wykorzystując jego wysokowydajne możliwości budowania. Ten dokument przedstawia rolę i kluczowe funkcje Rspack w frameworku Gez."]}),"\n",(0,n.jsxs)(e.h2,{id:"funkcje",children:["Funkcje",(0,n.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#funkcje",children:"#"})]}),"\n",(0,n.jsx)(e.p,{children:"Rspack jest podstawowym systemem budowania frameworku Gez, oferując następujące kluczowe funkcje:"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Wysokowydajne budowanie"}),": Silnik budowania oparty na Rust, zapewniający błyskawiczną kompilację, znacząco przyspieszając budowanie dużych projekt\xf3w"]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Optymalizacja doświadczenia programistycznego"}),": Obsługa hot reload (HMR), kompilacja przyrostowa i inne nowoczesne funkcje programistyczne, zapewniając płynne doświadczenie programistyczne"]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Budowanie w wielu środowiskach"}),": Ujednolicone konfiguracje budowania obsługujące środowiska klienckie (client), serwerowe (server) i Node.js (node), upraszczając proces rozwoju wieloplatformowego"]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Optymalizacja zasob\xf3w"}),": Wbudowane możliwości przetwarzania i optymalizacji zasob\xf3w, obsługa podziału kodu, Tree Shaking, kompresji zasob\xf3w i innych funkcji"]}),"\n"]}),"\n",(0,n.jsxs)(e.h2,{id:"budowanie-aplikacji",children:["Budowanie aplikacji",(0,n.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#budowanie-aplikacji",children:"#"})]}),"\n",(0,n.jsx)(e.p,{children:"System budowania Rspack w Gez ma modułową strukturę i obejmuje następujące kluczowe moduły:"}),"\n",(0,n.jsxs)(e.h3,{id:"gezrspack",children:["@gez/rspack",(0,n.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#gezrspack",children:"#"})]}),"\n",(0,n.jsx)(e.p,{children:"Podstawowy moduł budowania, zapewniający następujące kluczowe możliwości:"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Ujednolicone konfiguracje budowania"}),": Zapewnia standaryzowane zarządzanie konfiguracjami budowania, obsługujące konfiguracje dla wielu środowisk"]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Przetwarzanie zasob\xf3w"}),": Wbudowane możliwości przetwarzania zasob\xf3w takich jak TypeScript, CSS, obrazy itp."]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Optymalizacja budowania"}),": Zapewnia funkcje optymalizacji wydajności, takie jak podział kodu i Tree Shaking"]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Serwer programistyczny"}),": Zintegrowany wysokowydajny serwer programistyczny z obsługą HMR"]}),"\n"]}),"\n",(0,n.jsxs)(e.h3,{id:"gezrspack-vue",children:["@gez/rspack-vue",(0,n.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#gezrspack-vue",children:"#"})]}),"\n",(0,n.jsx)(e.p,{children:"Specjalny moduł budowania dla frameworku Vue, zapewniający:"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Kompilacja komponent\xf3w Vue"}),": Obsługa wydajnej kompilacji komponent\xf3w Vue 2/3"]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Optymalizacja SSR"}),": Specyficzne optymalizacje dla scenariuszy renderowania po stronie serwera"]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Rozszerzenia programistyczne"}),": Specyficzne funkcje rozszerzające środowisko programistyczne Vue"]}),"\n"]}),"\n",(0,n.jsxs)(e.h2,{id:"proces-budowania",children:["Proces budowania",(0,n.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#proces-budowania",children:"#"})]}),"\n",(0,n.jsx)(e.p,{children:"Proces budowania w Gez składa się z następujących etap\xf3w:"}),"\n",(0,n.jsxs)(e.ol,{children:["\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(e.p,{children:(0,n.jsx)(e.strong,{children:"Inicjalizacja konfiguracji"})}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:"Ładowanie konfiguracji projektu"}),"\n",(0,n.jsx)(e.li,{children:"Scalanie konfiguracji domyślnych i użytkownika"}),"\n",(0,n.jsx)(e.li,{children:"Dostosowanie konfiguracji na podstawie zmiennych środowiskowych"}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(e.p,{children:(0,n.jsx)(e.strong,{children:"Kompilacja zasob\xf3w"})}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:"Analiza zależności kodu źr\xf3dłowego"}),"\n",(0,n.jsx)(e.li,{children:"Transformacja r\xf3żnych zasob\xf3w (TypeScript, CSS itp.)"}),"\n",(0,n.jsx)(e.li,{children:"Przetwarzanie import\xf3w i eksport\xf3w moduł\xf3w"}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(e.p,{children:(0,n.jsx)(e.strong,{children:"Przetwarzanie optymalizacji"})}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:"Wykonanie podziału kodu"}),"\n",(0,n.jsx)(e.li,{children:"Zastosowanie Tree Shaking"}),"\n",(0,n.jsx)(e.li,{children:"Kompresja kodu i zasob\xf3w"}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(e.p,{children:(0,n.jsx)(e.strong,{children:"Generowanie wynik\xf3w"})}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:"Generowanie plik\xf3w docelowych"}),"\n",(0,n.jsx)(e.li,{children:"Generowanie map zasob\xf3w"}),"\n",(0,n.jsx)(e.li,{children:"Generowanie raportu budowania"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(e.h2,{id:"najlepsze-praktyki",children:["Najlepsze praktyki",(0,n.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#najlepsze-praktyki",children:"#"})]}),"\n",(0,n.jsxs)(e.h3,{id:"optymalizacja-środowiska-programistycznego",children:["Optymalizacja środowiska programistycznego",(0,n.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#optymalizacja-środowiska-programistycznego",children:"#"})]}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Konfiguracja kompilacji przyrostowej"}),": Właściwa konfiguracja opcji ",(0,n.jsx)(e.code,{children:"cache"}),", wykorzystanie pamięci podręcznej do przyspieszenia budowania"]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Optymalizacja HMR"}),": Celowa konfiguracja zakresu hot reload, unikanie niepotrzebnych aktualizacji moduł\xf3w"]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Optymalizacja przetwarzania zasob\xf3w"}),": Używanie odpowiednich konfiguracji loader\xf3w, unikanie powtarzającego się przetwarzania"]}),"\n"]}),"\n",(0,n.jsxs)(e.h3,{id:"optymalizacja-środowiska-produkcyjnego",children:["Optymalizacja środowiska produkcyjnego",(0,n.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#optymalizacja-środowiska-produkcyjnego",children:"#"})]}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Strategia podziału kodu"}),": Właściwa konfiguracja ",(0,n.jsx)(e.code,{children:"splitChunks"}),", optymalizacja ładowania zasob\xf3w"]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Kompresja zasob\xf3w"}),": Włączenie odpowiednich konfiguracji kompresji, r\xf3wnoważenie czasu budowania i rozmiaru wynik\xf3w"]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Optymalizacja pamięci podręcznej"}),": Wykorzystanie skr\xf3t\xf3w zawartości i strategii długoterminowego buforowania, poprawa wydajności ładowania"]}),"\n"]}),"\n",(0,n.jsxs)(e.h2,{id:"przykład-konfiguracji",children:["Przykład konfiguracji",(0,n.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#przykład-konfiguracji",children:"#"})]}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-ts",meta:'title="src/entry.node.ts"',children:"import type { GezOptions } from '@gez/core';\n\nexport default {\n    async devApp(gez) {\n        return import('@gez/rspack').then((m) =>\n            m.createRspackHtmlApp(gez, {\n                // Niestandardowa konfiguracja budowania\n                config({ config }) {\n                    // Dodaj niestandardowe konfiguracje Rspack tutaj\n                }\n            })\n        );\n    },\n} satisfies GezOptions;\n"})}),"\n",(0,n.jsxs)(e.div,{className:"rspress-directive tip",children:[(0,n.jsx)(e.div,{className:"rspress-directive-title",children:"TIP"}),(0,n.jsx)(e.div,{className:"rspress-directive-content",children:(0,n.jsxs)(e.p,{children:["Więcej szczeg\xf3łowych informacji na temat API i opcji konfiguracji można znaleźć w ",(0,n.jsx)(e.a,{href:"/api/app/rspack.html",children:"dokumentacji API Rspack"}),".\n"]})})]})]})}function s(){let a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,r.ah)(),a.components);return e?(0,n.jsx)(e,{...a,children:(0,n.jsx)(o,{...a})}):o(a)}let c=s;s.__RSPRESS_PAGE_META={},s.__RSPRESS_PAGE_META["pl%2Fguide%2Fessentials%2Frspack.md"]={toc:[{text:"Funkcje",id:"funkcje",depth:2},{text:"Budowanie aplikacji",id:"budowanie-aplikacji",depth:2},{text:"@gez/rspack",id:"gezrspack",depth:3},{text:"@gez/rspack-vue",id:"gezrspack-vue",depth:3},{text:"Proces budowania",id:"proces-budowania",depth:2},{text:"Najlepsze praktyki",id:"najlepsze-praktyki",depth:2},{text:"Optymalizacja środowiska programistycznego",id:"optymalizacja-środowiska-programistycznego",depth:3},{text:"Optymalizacja środowiska produkcyjnego",id:"optymalizacja-środowiska-produkcyjnego",depth:3},{text:"Przykład konfiguracji",id:"przykład-konfiguracji",depth:2}],title:"Rspack",headingTitle:"Rspack",frontmatter:{titleSuffix:"Gez Framework - Wysokowydajny silnik budowania",description:"Szczeg\xf3łowa analiza systemu budowania Rspack w frameworku Gez, obejmująca kluczowe funkcje takie jak wysokowydajna kompilacja, budowanie w wielu środowiskach, optymalizacja zasob\xf3w, kt\xf3re pomagają programistom tworzyć wydajne i niezawodne nowoczesne aplikacje webowe.",head:[["meta",{property:"keywords",content:"Gez, Rspack, system budowania, wysokowydajna kompilacja, hot reload, budowanie w wielu środowiskach, Tree Shaking, podział kodu, SSR, optymalizacja zasob\xf3w, efektywność programistyczna, narzędzia budowania"}]]}}}}]);