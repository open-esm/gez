"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["5738"],{40750:function(e,n,r){r.r(n),r.d(n,{default:()=>a});var i=r(31549),s=r(6603);function t(e){let n=Object.assign({h1:"h1",a:"a",p:"p",ol:"ol",li:"li",strong:"strong",ul:"ul",h2:"h2",code:"code",pre:"pre",h3:"h3",h4:"h4"},(0,s.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h1,{id:"rendercontext",children:["RenderContext",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#rendercontext",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"RenderContext is een kernklasse in het Gez-framework die voornamelijk verantwoordelijk is voor resourcebeheer en HTML-generatie tijdens het server-side rendering (SSR) proces. Het heeft de volgende kernkenmerken:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Op ESM gebaseerd modulesysteem"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Gebruikt de moderne ECMAScript Modules-standaard"}),"\n",(0,i.jsx)(n.li,{children:"Ondersteunt native module-import en -export"}),"\n",(0,i.jsx)(n.li,{children:"Biedt betere code-splitsing en lazy loading"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Intelligente afhankelijkheidsverzameling"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Verzamelt dynamisch afhankelijkheden op basis van het daadwerkelijke renderpad"}),"\n",(0,i.jsx)(n.li,{children:"Voorkomt onnodige resource-loading"}),"\n",(0,i.jsx)(n.li,{children:"Ondersteunt asynchrone componenten en dynamische import"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Precieze resource-injectie"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Beheert strikt de volgorde van resource-loading"}),"\n",(0,i.jsx)(n.li,{children:"Optimaliseert de prestaties van de eerste paginaweergave"}),"\n",(0,i.jsx)(n.li,{children:"Zorgt voor betrouwbare client-side hydratatie"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Flexibel configuratiemechanisme"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ondersteunt dynamische basispadconfiguratie"}),"\n",(0,i.jsx)(n.li,{children:"Biedt meerdere import mapping-modussen"}),"\n",(0,i.jsx)(n.li,{children:"Past zich aan verschillende implementatiescenario's aan"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.h2,{id:"gebruikswijze",children:["Gebruikswijze",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#gebruikswijze",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["In het Gez-framework hoeven ontwikkelaars meestal geen RenderContext-instantie direct aan te maken, maar kunnen ze deze verkrijgen via de ",(0,i.jsx)(n.code,{children:"gez.render()"}),"-methode:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.node.ts"',children:"async server(gez) {\n    const server = http.createServer((req, res) => {\n        // Statische bestandsverwerking\n        gez.middleware(req, res, async () => {\n            // Verkrijg RenderContext-instantie via gez.render()\n            const rc = await gez.render({\n                params: {\n                    url: req.url\n                }\n            });\n            // Reageer met HTML-inhoud\n            res.end(rc.html);\n        });\n    });\n}\n"})}),"\n",(0,i.jsxs)(n.h2,{id:"belangrijkste-functionaliteiten",children:["Belangrijkste functionaliteiten",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#belangrijkste-functionaliteiten",children:"#"})]}),"\n",(0,i.jsxs)(n.h3,{id:"afhankelijkheidsverzameling",children:["Afhankelijkheidsverzameling",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#afhankelijkheidsverzameling",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"RenderContext implementeert een intelligent afhankelijkheidsverzamelingsmechanisme dat afhankelijkheden dynamisch verzamelt op basis van de daadwerkelijk gerenderde componenten, in plaats van simpelweg alle mogelijke resources vooraf te laden:"}),"\n",(0,i.jsxs)(n.h4,{id:"op-aanvraag-verzamelen",children:["Op aanvraag verzamelen",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#op-aanvraag-verzamelen",children:"#"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Volgt en registreert automatisch module-afhankelijkheden tijdens het renderen van componenten"}),"\n",(0,i.jsx)(n.li,{children:"Verzamelt alleen CSS, JavaScript en andere resources die daadwerkelijk worden gebruikt tijdens het renderen van de huidige pagina"}),"\n",(0,i.jsxs)(n.li,{children:["Registreert nauwkeurig de module-afhankelijkheden van elke component via ",(0,i.jsx)(n.code,{children:"importMetaSet"})]}),"\n",(0,i.jsx)(n.li,{children:"Ondersteunt afhankelijkheidsverzameling voor asynchrone componenten en dynamische import"}),"\n"]}),"\n",(0,i.jsxs)(n.h4,{id:"automatische-verwerking",children:["Automatische verwerking",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#automatische-verwerking",children:"#"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ontwikkelaars hoeven het afhankelijkheidsverzamelingsproces niet handmatig te beheren"}),"\n",(0,i.jsx)(n.li,{children:"Het framework verzamelt automatisch afhankelijkheidsinformatie tijdens het renderen van componenten"}),"\n",(0,i.jsxs)(n.li,{children:["Verwerkt alle verzamelde resources via de ",(0,i.jsx)(n.code,{children:"commit()"}),"-methode"]}),"\n",(0,i.jsx)(n.li,{children:"Behandelt automatisch circulaire en dubbele afhankelijkheden"}),"\n"]}),"\n",(0,i.jsxs)(n.h4,{id:"prestatieoptimalisatie",children:["Prestatieoptimalisatie",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#prestatieoptimalisatie",children:"#"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Voorkomt het laden van ongebruikte modules, wat de laadtijd van de eerste pagina aanzienlijk vermindert"}),"\n",(0,i.jsx)(n.li,{children:"Beheert nauwkeurig de volgorde van resource-loading om de paginaweergaveprestaties te optimaliseren"}),"\n",(0,i.jsx)(n.li,{children:"Genereert automatisch optimale import mapping (Import Map)"}),"\n",(0,i.jsx)(n.li,{children:"Ondersteunt resource-preloading en lazy loading-strategie\xebn"}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"resource-injectie",children:["Resource-injectie",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#resource-injectie",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"RenderContext biedt meerdere methoden om verschillende soorten resources te injecteren, elk ontworpen om de resource-loadingprestaties te optimaliseren:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"preload()"}),": Preload CSS- en JS-resources, ondersteunt prioriteitsconfiguratie"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"css()"}),": Injecteer eerste scherm-stylesheets, ondersteunt kritieke CSS-extractie"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"importmap()"}),": Injecteer module-import mapping, ondersteunt dynamische padresolutie"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"moduleEntry()"}),": Injecteer client-side entry-module, ondersteunt meerdere entry-configuraties"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"modulePreload()"}),": Preload module-afhankelijkheden, ondersteunt lazy loading-strategie\xebn"]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"resource-injectievolgorde",children:["Resource-injectievolgorde",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#resource-injectievolgorde",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"RenderContext beheert strikt de volgorde van resource-injectie, een ontwerp dat is gebaseerd op de werking van browsers en prestatieoverwegingen:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"head-gedeelte:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"preload()"}),": Preload CSS- en JS-resources, zodat de browser deze zo vroeg mogelijk kan ontdekken en laden"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"css()"}),": Injecteer eerste scherm-stylesheets, zorg ervoor dat de paginastijlen klaar zijn wanneer de inhoud wordt weergegeven"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"body-gedeelte:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"importmap()"}),": Injecteer module-import mapping, definieer padresolutie-regels voor ESM-modules"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"moduleEntry()"}),": Injecteer client-side entry-module, moet na importmap worden uitgevoerd"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"modulePreload()"}),": Preload module-afhankelijkheden, moet na importmap worden uitgevoerd"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.h2,{id:"volledig-renderproces",children:["Volledig renderproces",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#volledig-renderproces",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"Een typisch RenderContext-gebruiksproces ziet er als volgt uit:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.server.ts"',children:"export default async (rc: RenderContext) => {\n    // 1. Render pagina-inhoud en verzamel afhankelijkheden\n    const app = createApp();\n    const html = await renderToString(app, {\n       importMetaSet: rc.importMetaSet\n    });\n\n    // 2. Commit afhankelijkheidsverzameling\n    await rc.commit();\n    \n    // 3. Genereer volledige HTML\n    rc.html = `\n        <!DOCTYPE html>\n        <html>\n        <head>\n            ${rc.preload()}\n            ${rc.css()}\n        </head>\n        <body>\n            ${html}\n            ${rc.importmap()}\n            ${rc.moduleEntry()}\n            ${rc.modulePreload()}\n        </body>\n        </html>\n    `;\n};\n"})}),"\n",(0,i.jsxs)(n.h2,{id:"geavanceerde-functies",children:["Geavanceerde functies",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#geavanceerde-functies",children:"#"})]}),"\n",(0,i.jsxs)(n.h3,{id:"basispadconfiguratie",children:["Basispadconfiguratie",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#basispadconfiguratie",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"RenderContext biedt een flexibel mechanisme voor dynamische basispadconfiguratie, dat ondersteuning biedt voor het dynamisch instellen van het basispad voor statische resources tijdens runtime:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.node.ts"',children:"const rc = await gez.render({\n    base: '/gez',  // Stel basispad in\n    params: {\n        url: req.url\n    }\n});\n"})}),"\n",(0,i.jsx)(n.p,{children:"Dit mechanisme is vooral nuttig in de volgende scenario's:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Implementatie van meertalige sites"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"hoofddomein.com      → Standaardtaal\nhoofddomein.com/nl/  → Nederlandse site\nhoofddomein.com/en/  → Engelse site\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Microfrontend-toepassingen"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ondersteunt flexibele implementatie van subtoepassingen onder verschillende paden"}),"\n",(0,i.jsx)(n.li,{children:"Maakt integratie in verschillende hoofdtoepassingen eenvoudig"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"import-mapping-modus",children:["Import mapping-modus",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#import-mapping-modus",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"RenderContext biedt twee import mapping (Import Map)-modi:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Inline-modus"})," (standaard)"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Plaatst import mapping direct inline in de HTML"}),"\n",(0,i.jsx)(n.li,{children:"Geschikt voor kleine toepassingen, vermindert extra netwerkverzoeken"}),"\n",(0,i.jsx)(n.li,{children:"Direct beschikbaar bij het laden van de pagina"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"JS-modus"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Laadt import mapping via een extern JavaScript-bestand"}),"\n",(0,i.jsx)(n.li,{children:"Geschikt voor grote toepassingen, maakt gebruik van browsercaching"}),"\n",(0,i.jsx)(n.li,{children:"Ondersteunt dynamische updates van mapping-inhoud"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"De gewenste modus kan worden geselecteerd via configuratie:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.node.ts"',children:"const rc = await gez.render({\n    importmapMode: 'js',  // 'inline' | 'js'\n    params: {\n        url: req.url\n    }\n});\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"entry-functieconfiguratie",children:["Entry-functieconfiguratie",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entry-functieconfiguratie",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["RenderContext ondersteunt configuratie via ",(0,i.jsx)(n.code,{children:"entryName"})," om de server-side rendering entry-functie aan te geven:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.node.ts"',children:"const rc = await gez.render({\n    entryName: 'mobile',  // Geef mobiele entry-functie aan\n    params: {\n        url: req.url\n    }\n});\n"})}),"\n",(0,i.jsx)(n.p,{children:"Dit mechanisme is vooral nuttig in de volgende scenario's:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Meerdere sjabloonrenders"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.server.ts"',children:"// Mobiele entry-functie\nexport const mobile = async (rc: RenderContext) => {\n    // Mobiel-specifieke renderlogica\n};\n\n// Desktop entry-functie\nexport const desktop = async (rc: RenderContext) => {\n    // Desktop-specifieke renderlogica\n};\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"A/B-testen"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ondersteunt het gebruik van verschillende renderlogica voor dezelfde pagina"}),"\n",(0,i.jsx)(n.li,{children:"Maakt gebruikerservaringsexperimenten eenvoudig"}),"\n",(0,i.jsx)(n.li,{children:"Flexibele overschakeling tussen verschillende renderstrategie\xebn"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Speciale renderbehoeften"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ondersteunt aangepaste renderprocessen voor bepaalde pagina's"}),"\n",(0,i.jsx)(n.li,{children:"Past zich aan prestatieoptimalisatiebehoeften voor verschillende scenario's aan"}),"\n",(0,i.jsx)(n.li,{children:"Biedt fijnmazige rendercontrole"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.h2,{id:"best-practices",children:["Best Practices",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#best-practices",children:"#"})]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Verkrijg RenderContext-instantie"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Verkrijg altijd instanties via de ",(0,i.jsx)(n.code,{children:"gez.render()"}),"-methode"]}),"\n",(0,i.jsx)(n.li,{children:"Geef indien nodig de juiste parameters door"}),"\n",(0,i.jsx)(n.li,{children:"Vermijd handmatige instantiecreatie"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Afhankelijkheidsverzameling"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Zorg ervoor dat alle modules correct ",(0,i.jsx)(n.code,{children:"importMetaSet.add(import.meta)"})," aanroepen"]}),"\n",(0,i.jsxs)(n.li,{children:["Roep de ",(0,i.jsx)(n.code,{children:"commit()"}),"-methode direct na het renderen aan"]}),"\n",(0,i.jsx)(n.li,{children:"Gebruik asynchrone componenten en dynamische import om de eerste paginaweergave te optimaliseren"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Resource-injectie"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Volg strikt de resource-injectievolgorde"}),"\n",(0,i.jsx)(n.li,{children:"Injecteer geen CSS in de body"}),"\n",(0,i.jsx)(n.li,{children:"Zorg ervoor dat importmap voor moduleEntry komt"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Prestatieoptimalisatie"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Gebruik preload om kritieke resources vooraf te laden"}),"\n",(0,i.jsx)(n.li,{children:"Gebruik modulePreload verstandig om module-loading te optimaliseren"}),"\n",(0,i.jsx)(n.li,{children:"Vermijd onnodige resource-loading"}),"\n",(0,i.jsx)(n.li,{children:"Maak gebruik van browsercaching om de laadprestaties te optimaliseren"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"\n"})})]})}function d(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(t,{...e})}):t(e)}let a=d;d.__RSPRESS_PAGE_META={},d.__RSPRESS_PAGE_META["nl%2Fguide%2Fessentials%2Frender-context.md"]={toc:[{text:"Gebruikswijze",id:"gebruikswijze",depth:2},{text:"Belangrijkste functionaliteiten",id:"belangrijkste-functionaliteiten",depth:2},{text:"Afhankelijkheidsverzameling",id:"afhankelijkheidsverzameling",depth:3},{text:"Op aanvraag verzamelen",id:"op-aanvraag-verzamelen",depth:4},{text:"Automatische verwerking",id:"automatische-verwerking",depth:4},{text:"Prestatieoptimalisatie",id:"prestatieoptimalisatie",depth:4},{text:"Resource-injectie",id:"resource-injectie",depth:3},{text:"Resource-injectievolgorde",id:"resource-injectievolgorde",depth:3},{text:"Volledig renderproces",id:"volledig-renderproces",depth:2},{text:"Geavanceerde functies",id:"geavanceerde-functies",depth:2},{text:"Basispadconfiguratie",id:"basispadconfiguratie",depth:3},{text:"Import mapping-modus",id:"import-mapping-modus",depth:3},{text:"Entry-functieconfiguratie",id:"entry-functieconfiguratie",depth:3},{text:"Best Practices",id:"best-practices",depth:2}],title:"RenderContext",headingTitle:"RenderContext",frontmatter:{titleSuffix:"Gez Framework Server-Side Rendering Kernmechanisme",description:"Gedetailleerde uitleg over het RenderContext-mechanisme van het Gez-framework, inclusief resourcebeheer, HTML-generatie en het ESM-modulesysteem, om ontwikkelaars te helpen bij het begrijpen en gebruiken van server-side rendering-functionaliteit.",head:[["meta",{property:"keywords",content:"Gez, RenderContext, SSR, Server-Side Rendering, ESM, Resourcebeheer"}]]}}}}]);