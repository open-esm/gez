"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["7179"],{86650:function(e,n,t){t.r(n),t.d(n,{default:()=>c});var r=t(31549),s=t(6603);function i(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",pre:"pre",code:"code",h3:"h3",ol:"ol",li:"li"},(0,s.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"html",children:["HTML",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#html",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"บทช่วยสอนนี้จะช่วยให้คุณสร้างแอปพลิเคชัน HTML SSR ด้วย Gez Framework ตั้งแต่เริ่มต้น เราจะแสดงตัวอย่างการใช้งาน Gez Framework ในการสร้างแอปพลิเคชันที่เรนเดอร์ฝั่งเซิร์ฟเวอร์"}),"\n",(0,r.jsxs)(n.h2,{id:"โครงสร้างโปรเจกต์",children:["โครงสร้างโปรเจกต์",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#โครงสร้างโปรเจกต์",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"ก่อนอื่น มาทำความเข้าใจโครงสร้างพื้นฐานของโปรเจกต์:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:".\n├── package.json         # ไฟล์กำหนดค่าของโปรเจกต์ กำหนด dependencies และคำสั่งสคริปต์\n├── tsconfig.json        # ไฟล์กำหนดค่า TypeScript ตั้งค่าตัวเลือกการคอมไพล์\n└── src                  # ไดเรกทอรีซอร์สโค้ด\n    ├── app.ts           # คอมโพเนนต์หลักของแอปพลิเคชัน กำหนดโครงสร้างหน้าและตรรกะการโต้ตอบ\n    ├── create-app.ts    # โรงงานสร้างอินสแตนซ์แอปพลิเคชัน รับผิดชอบการเริ่มต้นแอปพลิเคชัน\n    ├── entry.client.ts  # ไฟล์เข้าไคลเอนต์ จัดการการเรนเดอร์ฝั่งเบราว์เซอร์\n    ├── entry.node.ts    # ไฟล์เข้าเซิร์ฟเวอร์ Node.js รับผิดชอบการกำหนดค่า environment การพัฒนาและการเริ่มต้นเซิร์ฟเวอร์\n    └── entry.server.ts  # ไฟล์เข้าเซิร์ฟเวอร์ จัดการตรรกะการเรนเดอร์ SSR\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"การกำหนดค่าโปรเจกต์",children:["การกำหนดค่าโปรเจกต์",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#การกำหนดค่าโปรเจกต์",children:"#"})]}),"\n",(0,r.jsxs)(n.h3,{id:"packagejson",children:["package.json",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#packagejson",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["สร้างไฟล์ ",(0,r.jsx)(n.code,{children:"package.json"})," เพื่อกำหนดค่า dependencies และสคริปต์ของโปรเจกต์:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",meta:'title="package.json"',children:'{\n  "name": "ssr-demo-html",\n  "version": "1.0.0",\n  "type": "module",\n  "private": true,\n  "scripts": {\n    "dev": "gez dev",\n    "build": "npm run build:dts && npm run build:ssr",\n    "build:ssr": "gez build",\n    "preview": "gez preview",\n    "start": "NODE_ENV=production node dist/index.js",\n    "build:dts": "tsc --declaration --emitDeclarationOnly --outDir dist/src"\n  },\n  "dependencies": {\n    "@gez/core": "*"\n  },\n  "devDependencies": {\n    "@gez/rspack": "*",\n    "@types/node": "22.8.6",\n    "typescript": "^5.7.3"\n  }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["หลังจากสร้างไฟล์ ",(0,r.jsx)(n.code,{children:"package.json"})," แล้ว ต้องติดตั้ง dependencies ของโปรเจกต์ คุณสามารถใช้คำสั่งใดคำสั่งหนึ่งต่อไปนี้เพื่อติดตั้ง:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"pnpm install\n# หรือ\nyarn install\n# หรือ\nnpm install\n"})}),"\n",(0,r.jsx)(n.p,{children:"คำสั่งนี้จะติดตั้งแพ็คเกจ dependencies ที่จำเป็นทั้งหมด รวมถึง TypeScript และ dependencies ที่เกี่ยวข้องกับ SSR"}),"\n",(0,r.jsxs)(n.h3,{id:"tsconfigjson",children:["tsconfig.json",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#tsconfigjson",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["สร้างไฟล์ ",(0,r.jsx)(n.code,{children:"tsconfig.json"})," เพื่อกำหนดค่าตัวเลือกการคอมไพล์ TypeScript:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",meta:'title="tsconfig.json"',children:'{\n    "compilerOptions": {\n        "module": "ESNext",\n        "moduleResolution": "node",\n        "isolatedModules": true,\n        "resolveJsonModule": true,\n        \n        "target": "ESNext",\n        "lib": ["ESNext", "DOM"],\n        \n        "strict": true,\n        "skipLibCheck": true,\n        "types": ["@types/node"],\n        \n        "experimentalDecorators": true,\n        "allowSyntheticDefaultImports": true,\n        \n        "baseUrl": ".",\n        "paths": {\n            "ssr-demo-html/src/*": ["./src/*"],\n            "ssr-demo-html/*": ["./*"]\n        }\n    },\n    "include": ["src"],\n    "exclude": ["dist", "node_modules"]\n}\n'})}),"\n",(0,r.jsxs)(n.h2,{id:"โครงสร้างซอร์สโค้ด",children:["โครงสร้างซอร์สโค้ด",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#โครงสร้างซอร์สโค้ด",children:"#"})]}),"\n",(0,r.jsxs)(n.h3,{id:"appts",children:["app.ts",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#appts",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["สร้างคอมโพเนนต์หลักของแอปพลิเคชัน ",(0,r.jsx)(n.code,{children:"src/app.ts"})," เพื่อกำหนดโครงสร้างหน้าและตรรกะการโต้ตอบ:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="src/app.ts"',children:"/**\n * @file ตัวอย่างคอมโพเนนต์\n * @description แสดงหัวหน้าหน้าพร้อมเวลาที่อัปเดตอัตโนมัติ เพื่อสาธิตฟังก์ชันพื้นฐานของ Gez Framework\n */\n\nexport default class App {\n    /**\n     * เวลาปัจจุบัน ในรูปแบบ ISO\n     * @type {string}\n     */\n    public time = '';\n\n    /**\n     * สร้างอินสแตนซ์แอปพลิเคชัน\n     * @param {SsrContext} [ssrContext] - context ฝั่งเซิร์ฟเวอร์ ประกอบด้วยชุด metadata ที่ import\n     */\n    public constructor(public ssrContext?: SsrContext) {\n        // ไม่จำเป็นต้องกำหนดค่าเพิ่มเติมใน constructor\n    }\n\n    /**\n     * เรนเดอร์เนื้อหาหน้า\n     * @returns {string} ส่งกลับโครงสร้าง HTML ของหน้า\n     */\n    public render(): string {\n        // ตรวจสอบให้แน่ใจว่า metadata ที่ import ถูกเก็บรวบรวมอย่างถูกต้องใน environment ฝั่งเซิร์ฟเวอร์\n        if (this.ssrContext) {\n            this.ssrContext.importMetaSet.add(import.meta);\n        }\n\n        return `\n        <div id=\"app\">\n            <h1><a href=\"https://www.jsesm.com/guide/frameworks/html.html\" target=\"_blank\">Gez เริ่มต้นอย่างรวดเร็ว</a></h1>\n            <time datetime=\"${this.time}\">${this.time}</time>\n        </div>\n        `;\n    }\n\n    /**\n     * การเริ่มต้นฝั่งไคลเอนต์\n     * @throws {Error} เกิดข้อผิดพลาดเมื่อไม่พบ element ที่แสดงเวลา\n     */\n    public onClient(): void {\n        // ดึง element ที่แสดงเวลา\n        const time = document.querySelector('#app time');\n        if (!time) {\n            throw new Error('ไม่พบ element ที่แสดงเวลา');\n        }\n\n        // ตั้งค่า interval เพื่ออัปเดตเวลาทุกวินาที\n        setInterval(() => {\n            this.time = new Date().toISOString();\n            time.setAttribute('datetime', this.time);\n            time.textContent = this.time;\n        }, 1000);\n    }\n\n    /**\n     * การเริ่มต้นฝั่งเซิร์ฟเวอร์\n     */\n    public onServer(): void {\n        this.time = new Date().toISOString();\n    }\n}\n\n/**\n * อินเทอร์เฟซ context ฝั่งเซิร์ฟเวอร์\n * @interface\n */\nexport interface SsrContext {\n    /**\n     * ชุด metadata ที่ import\n     * @type {Set<ImportMeta>}\n     */\n    importMetaSet: Set<ImportMeta>;\n}\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"create-appts",children:["create-app.ts",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#create-appts",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["สร้างไฟล์ ",(0,r.jsx)(n.code,{children:"src/create-app.ts"})," เพื่อสร้างอินสแตนซ์แอปพลิเคชัน:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="src/create-app.ts"',children:"/**\n * @file การสร้างอินสแตนซ์แอปพลิเคชัน\n * @description รับผิดชอบการสร้างและกำหนดค่าอินสแตนซ์แอปพลิเคชัน\n */\n\nimport App from './app';\n\nexport function createApp() {\n    const app = new App();\n    return {\n        app\n    };\n}\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"entryclientts",children:["entry.client.ts",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entryclientts",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["สร้างไฟล์เข้าไคลเอนต์ ",(0,r.jsx)(n.code,{children:"src/entry.client.ts"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.client.ts"',children:"/**\n * @file ไฟล์เข้าไคลเอนต์\n * @description รับผิดชอบตรรกะการโต้ตอบฝั่งไคลเอนต์และการอัปเดตแบบไดนามิก\n */\n\nimport { createApp } from './create-app';\n\n// สร้างอินสแตนซ์แอปพลิเคชันและเริ่มต้น\nconst { app } = createApp();\napp.onClient();\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"entrynodets",children:["entry.node.ts",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entrynodets",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["สร้างไฟล์ ",(0,r.jsx)(n.code,{children:"entry.node.ts"})," เพื่อกำหนดค่า environment การพัฒนาและการเริ่มต้นเซิร์ฟเวอร์:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.node.ts"',children:"/**\n * @file ไฟล์เข้าเซิร์ฟเวอร์ Node.js\n * @description รับผิดชอบการกำหนดค่า environment การพัฒนาและการเริ่มต้นเซิร์ฟเวอร์ จัดเตรียม environment การทำงานของ SSR\n */\n\nimport http from 'node:http';\nimport type { GezOptions } from '@gez/core';\n\nexport default {\n    /**\n     * กำหนดค่า app creator สำหรับ environment การพัฒนา\n     * @description สร้างและกำหนดค่าอินสแตนซ์ Rspack app สำหรับ environment การพัฒนา เพื่อการ build และ hot module replacement\n     * @param gez อินสแตนซ์ Gez Framework จัดเตรียมฟังก์ชันหลักและอินเทอร์เฟซการกำหนดค่า\n     * @returns ส่งกลับอินสแตนซ์ Rspack app ที่กำหนดค่าแล้ว รองรับ HMR และการแสดงตัวอย่างแบบ real-time\n     */\n    async devApp(gez) {\n        return import('@gez/rspack').then((m) =>\n            m.createRspackHtmlApp(gez, {\n                config(context) {\n                    // กำหนดค่า Rspack compilation ที่นี่\n                }\n            })\n        );\n    },\n\n    /**\n     * กำหนดค่าและเริ่มต้น HTTP server\n     * @description สร้างอินสแตนซ์ HTTP server รวม Gez middleware เพื่อจัดการคำขอ SSR\n     * @param gez อินสแตนซ์ Gez Framework จัดเตรียม middleware และฟังก์ชันการเรนเดอร์\n     */\n    async server(gez) {\n        const server = http.createServer((req, res) => {\n            // ใช้ Gez middleware เพื่อจัดการคำขอ\n            gez.middleware(req, res, async () => {\n                // ดำเนินการเรนเดอร์ฝั่งเซิร์ฟเวอร์\n                const rc = await gez.render({\n                    params: { url: req.url }\n                });\n                res.end(rc.html);\n            });\n        });\n\n        server.listen(3000, () => {\n            console.log('เซิร์ฟเวอร์เริ่มทำงาน: http://localhost:3000');\n        });\n    }\n} satisfies GezOptions;\n"})}),"\n",(0,r.jsx)(n.p,{children:"ไฟล์นี้เป็นไฟล์เข้าสำหรับการกำหนดค่า environment การพัฒนาและการเริ่มต้นเซิร์ฟเวอร์ ประกอบด้วยสองฟังก์ชันหลัก:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["ฟังก์ชัน ",(0,r.jsx)(n.code,{children:"devApp"}),": รับผิดชอบการสร้างและกำหนดค่าอินสแตนซ์ Rspack app สำหรับ environment การพัฒนา รองรับ hot module replacement และการแสดงตัวอย่างแบบ real-time"]}),"\n",(0,r.jsxs)(n.li,{children:["ฟังก์ชัน ",(0,r.jsx)(n.code,{children:"server"}),": รับผิดชอบการสร้างและกำหนดค่า HTTP server รวม Gez middleware เพื่อจัดการคำขอ SSR"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"entryserverts",children:["entry.server.ts",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entryserverts",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["สร้างไฟล์เข้าเซิร์ฟเวอร์ ",(0,r.jsx)(n.code,{children:"src/entry.server.ts"})," เพื่อจัดการกระบวนการเรนเดอร์ฝั่งเซิร์ฟเวอร์:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.server.ts"',children:"/**\n * @file ไฟล์เข้าเซิร์ฟเวอร์\n * @description รับผิดชอบกระบวนการเรนเดอร์ฝั่งเซิร์ฟเวอร์ การสร้าง HTML และการ inject ทรัพยากร\n */\n\nimport type { RenderContext } from '@gez/core';\nimport type App from './app';\nimport type { SsrContext } from './app';\nimport { createApp } from './create-app';\n\n// ห่อหุ้มตรรกะการสร้างเนื้อหาหน้า\nconst renderToString = (app: App, ssrContext: SsrContext): string => {\n    // inject context ฝั่งเซิร์ฟเวอร์ลงในอินสแตนซ์แอปพลิเคชัน\n    app.ssrContext = ssrContext;\n    // เริ่มต้นฝั่งเซิร์ฟเวอร์\n    app.onServer();\n\n    // สร้างเนื้อหาหน้า\n    return app.render();\n};\n\nexport default async (rc: RenderContext) => {\n    // สร้างอินสแตนซ์แอปพลิเคชัน ส่งกลับออบเจ็กต์ที่มีอินสแตนซ์ app\n    const { app } = createApp();\n    // ใช้ renderToString เพื่อสร้างเนื้อหาหน้า\n    const html = renderToString(app, {\n        importMetaSet: rc.importMetaSet\n    });\n\n    // ยืนยันการรวบรวม dependencies เพื่อให้แน่ใจว่าทรัพยากรที่จำเป็นทั้งหมดถูกโหลด\n    await rc.commit();\n\n    // สร้างโครงสร้าง HTML ที่สมบูรณ์\n    rc.html = `<!DOCTYPE html>\n<html lang=\"th\">\n<head>\n    ${rc.preload()}\n    <title>Gez เริ่มต้นอย่างรวดเร็ว</title>\n    ${rc.css()}\n</head>\n<body>\n    ${html}\n    ${rc.importmap()}\n    ${rc.moduleEntry()}\n    ${rc.modulePreload()}\n</body>\n</html>\n`;\n};\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"การรันโปรเจกต์",children:["การรันโปรเจกต์",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#การรันโปรเจกต์",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"หลังจากกำหนดค่าไฟล์ทั้งหมดแล้ว คุณสามารถใช้คำสั่งต่อไปนี้เพื่อรันโปรเจกต์:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"โหมดการพัฒนา:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm run dev\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:"build โปรเจกต์:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm run build\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsx)(n.li,{children:"รันใน environment production:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm run start\n"})}),"\n",(0,r.jsxs)(n.p,{children:["ตอนนี้ คุณได้สร้างแอปพลิเคชัน HTML SSR ด้วย Gez Framework เรียบร้อยแล้ว! เข้าถึง ",(0,r.jsx)(n.a,{href:"http://localhost:3000",target:"_blank",rel:"noopener noreferrer",children:"http://localhost:3000"})," เพื่อดูผลลัพธ์"]})]})}function a(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(i,{...e})}):i(e)}let c=a;a.__RSPRESS_PAGE_META={},a.__RSPRESS_PAGE_META["th%2Fguide%2Fframeworks%2Fhtml.md"]={toc:[{text:"โครงสร้างโปรเจกต์",id:"โครงสร้างโปรเจกต์",depth:2},{text:"การกำหนดค่าโปรเจกต์",id:"การกำหนดค่าโปรเจกต์",depth:2},{text:"package.json",id:"packagejson",depth:3},{text:"tsconfig.json",id:"tsconfigjson",depth:3},{text:"โครงสร้างซอร์สโค้ด",id:"โครงสร้างซอร์สโค้ด",depth:2},{text:"app.ts",id:"appts",depth:3},{text:"create-app.ts",id:"create-appts",depth:3},{text:"entry.client.ts",id:"entryclientts",depth:3},{text:"entry.node.ts",id:"entrynodets",depth:3},{text:"entry.server.ts",id:"entryserverts",depth:3},{text:"การรันโปรเจกต์",id:"การรันโปรเจกต์",depth:2}],title:"HTML",headingTitle:"HTML",frontmatter:{titleSuffix:"ตัวอย่างแอปพลิเคชัน HTML SSR ด้วย Gez Framework",description:"สร้างแอปพลิเคชัน HTML SSR ด้วย Gez Framework ตั้งแต่เริ่มต้น พร้อมตัวอย่างการใช้งานพื้นฐาน ตั้งแต่การเริ่มต้นโปรเจกต์ การตั้งค่า HTML และการกำหนดค่าไฟล์เข้า",head:[["meta",{property:"keywords",content:"Gez, HTML, แอปพลิเคชัน SSR, การตั้งค่า TypeScript, การเริ่มต้นโปรเจกต์, การเรนเดอร์ฝั่งเซิร์ฟเวอร์, การโต้ตอบฝั่งไคลเอนต์"}]]}}}}]);