"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["9563"],{85746:function(e,n,r){r.r(n),r.d(n,{default:()=>o});var t=r(31549),i=r(6603);function a(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",pre:"pre",code:"code",h3:"h3",ol:"ol",li:"li"},(0,i.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h1,{id:"preacthtm",children:["Preact+HTM",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#preacthtm",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"Deze tutorial helpt je bij het opzetten van een Preact+HTM SSR-applicatie met het Gez-framework vanaf nul. We zullen een volledig voorbeeld gebruiken om te laten zien hoe je een server-side rendering applicatie kunt maken met het Gez-framework."}),"\n",(0,t.jsxs)(n.h2,{id:"projectstructuur",children:["Projectstructuur",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#projectstructuur",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"Laten we eerst de basisstructuur van het project bekijken:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:".\n├── package.json         # Projectconfiguratiebestand, definieert afhankelijkheden en scriptcommando's\n├── tsconfig.json        # TypeScript-configuratiebestand, stelt compilatieopties in\n└── src                  # Broncode directory\n    ├── app.ts           # Hoofdapplicatiecomponent, definieert paginastructuur en interactielogica\n    ├── create-app.ts    # Applicatie-instantiecreatiefabriek, verantwoordelijk voor initialisatie van de applicatie\n    ├── entry.client.ts  # Client-side invoerbestand, verwerkt rendering in de browser\n    ├── entry.node.ts    # Node.js server invoerbestand, verantwoordelijk voor ontwikkelomgevingconfiguratie en serverstart\n    └── entry.server.ts  # Server-side invoerbestand, verwerkt SSR-renderinglogica\n"})}),"\n",(0,t.jsxs)(n.h2,{id:"projectconfiguratie",children:["Projectconfiguratie",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#projectconfiguratie",children:"#"})]}),"\n",(0,t.jsxs)(n.h3,{id:"packagejson",children:["package.json",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#packagejson",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["Maak het ",(0,t.jsx)(n.code,{children:"package.json"}),"-bestand aan en configureer projectafhankelijkheden en scripts:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",meta:'title="package.json"',children:'{\n  "name": "ssr-demo-preact-htm",\n  "version": "1.0.0",\n  "type": "module",\n  "private": true,\n  "scripts": {\n    "dev": "gez dev",\n    "build": "npm run build:dts && npm run build:ssr",\n    "build:ssr": "gez build",\n    "preview": "gez preview",\n    "start": "NODE_ENV=production node dist/index.js",\n    "build:dts": "tsc --declaration --emitDeclarationOnly --outDir dist/src"\n  },\n  "dependencies": {\n    "@gez/core": "*"\n  },\n  "devDependencies": {\n    "@gez/rspack": "*",\n    "@types/node": "22.8.6",\n    "htm": "^3.1.1",\n    "preact": "^10.26.2",\n    "preact-render-to-string": "^6.5.13",\n    "typescript": "^5.2.2"\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Nadat het ",(0,t.jsx)(n.code,{children:"package.json"}),"-bestand is aangemaakt, moet je de projectafhankelijkheden installeren. Je kunt een van de volgende commando's gebruiken om te installeren:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pnpm install\n# of\nyarn install\n# of\nnpm install\n"})}),"\n",(0,t.jsx)(n.p,{children:"Hiermee worden alle benodigde afhankelijkheden ge\xefnstalleerd, inclusief Preact, HTM, TypeScript en SSR-gerelateerde afhankelijkheden."}),"\n",(0,t.jsxs)(n.h3,{id:"tsconfigjson",children:["tsconfig.json",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#tsconfigjson",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["Maak het ",(0,t.jsx)(n.code,{children:"tsconfig.json"}),"-bestand aan en configureer TypeScript-compilatieopties:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",meta:'title="tsconfig.json"',children:'{\n    "compilerOptions": {\n        "isolatedModules": true,\n        "experimentalDecorators": true,\n        "resolveJsonModule": true,\n        "types": [\n            "@types/node"\n        ],\n        "target": "ESNext",\n        "module": "ESNext",\n        "moduleResolution": "node",\n        "strict": true,\n        "skipLibCheck": true,\n        "allowSyntheticDefaultImports": true,\n        "paths": {\n            "ssr-demo-preact-htm/src/*": [\n                "./src/*"\n            ],\n            "ssr-demo-preact-htm/*": [\n                "./*"\n            ]\n        }\n    },\n    "include": [\n        "src"\n    ],\n    "exclude": [\n        "dist"\n    ]\n}\n'})}),"\n",(0,t.jsxs)(n.h2,{id:"broncodestructuur",children:["Broncodestructuur",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#broncodestructuur",children:"#"})]}),"\n",(0,t.jsxs)(n.h3,{id:"appts",children:["app.ts",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#appts",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["Maak de hoofdapplicatiecomponent ",(0,t.jsx)(n.code,{children:"src/app.ts"})," aan, gebruikmakend van Preact's klassecomponenten en HTM:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:'title="src/app.ts"',children:"/**\n * @file Voorbeeldcomponent\n * @description Toont een paginatitel met automatisch bijgewerkte tijd, ter demonstratie van de basisfunctionaliteit van het Gez-framework\n */\n\nimport { Component } from 'preact';\nimport { html } from 'htm/preact';\n\nexport default class App extends Component {\n    state = {\n        time: new Date().toISOString()\n    };\n\n    timer: NodeJS.Timeout | null = null;\n\n    componentDidMount() {\n        this.timer = setInterval(() => {\n            this.setState({\n                time: new Date().toISOString()\n            });\n        }, 1000);\n    }\n\n    componentWillUnmount() {\n        if (this.timer) {\n            clearInterval(this.timer);\n        }\n    }\n\n    render() {\n        const { time } = this.state;\n        return html`\n            <div>\n                <h1><a href=\"https://www.jsesm.com/guide/frameworks/preact-htm.html\" target=\"_blank\">Gez Snel Starten</a></h1>\n                <time datetime=${time}>${time}</time>\n            </div>\n        `;\n    }\n}\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"create-appts",children:["create-app.ts",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#create-appts",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["Maak het ",(0,t.jsx)(n.code,{children:"src/create-app.ts"}),"-bestand aan, verantwoordelijk voor het cre\xebren van de applicatie-instantie:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:'title="src/create-app.ts"',children:"/**\n * @file Applicatie-instantiecreatie\n * @description Verantwoordelijk voor het cre\xebren en configureren van de applicatie-instantie\n */\n\nimport type { VNode } from 'preact';\nimport { html } from 'htm/preact';\nimport App from './app';\n\nexport function createApp(): { app: VNode } {\n    const app = html`<${App} />`;\n    return {\n        app\n    };\n}\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"entryclientts",children:["entry.client.ts",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entryclientts",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["Maak het client-side invoerbestand ",(0,t.jsx)(n.code,{children:"src/entry.client.ts"})," aan:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.client.ts"',children:"/**\n * @file Client-side invoerbestand\n * @description Verantwoordelijk voor client-side interactielogica en dynamische updates\n */\n\nimport { render } from 'preact';\nimport { createApp } from './create-app';\n\n// Cre\xeber applicatie-instantie\nconst { app } = createApp();\n\n// Mount applicatie-instantie\nrender(app, document.getElementById('app')!);\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"entrynodets",children:["entry.node.ts",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entrynodets",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["Maak het ",(0,t.jsx)(n.code,{children:"entry.node.ts"}),"-bestand aan, configureer de ontwikkelomgeving en start de server:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.node.ts"',children:"/**\n * @file Node.js server invoerbestand\n * @description Verantwoordelijk voor ontwikkelomgevingconfiguratie en serverstart, biedt SSR-runtimeomgeving\n */\n\nimport http from 'node:http';\nimport type { GezOptions } from '@gez/core';\n\nexport default {\n    /**\n     * Configureer de applicatiecreatie voor de ontwikkelomgeving\n     * @description Cre\xebert en configureert een Rspack-applicatie-instantie voor ontwikkelomgevingbouw en hot updates\n     * @param gez Gez-frameworkinstantie, biedt kernfunctionaliteit en configuratie-interfaces\n     * @returns Retourneert een geconfigureerde Rspack-applicatie-instantie, ondersteunt HMR en live preview\n     */\n    async devApp(gez) {\n        return import('@gez/rspack').then((m) =>\n            m.createRspackHtmlApp(gez, {\n                config(context) {\n                    // Pas hier de Rspack-compilatieconfiguratie aan\n                }\n            })\n        );\n    },\n\n    /**\n     * Configureer en start de HTTP-server\n     * @description Cre\xebert een HTTP-serverinstantie, integreert Gez-middleware, verwerkt SSR-verzoeken\n     * @param gez Gez-frameworkinstantie, biedt middleware en renderingfunctionaliteit\n     */\n    async server(gez) {\n        const server = http.createServer((req, res) => {\n            // Gebruik Gez-middleware om verzoeken te verwerken\n            gez.middleware(req, res, async () => {\n                // Voer server-side rendering uit\n                const rc = await gez.render({\n                    params: { url: req.url }\n                });\n                res.end(rc.html);\n            });\n        });\n\n        server.listen(3000, () => {\n            console.log('Server gestart: http://localhost:3000');\n        });\n    }\n} satisfies GezOptions;\n"})}),"\n",(0,t.jsx)(n.p,{children:"Dit bestand is het invoerbestand voor de ontwikkelomgevingconfiguratie en serverstart, en bevat twee kernfunctionaliteiten:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"devApp"}),"-functie: Verantwoordelijk voor het cre\xebren en configureren van de Rspack-applicatie-instantie voor de ontwikkelomgeving, ondersteunt hot updates en live preview-functionaliteit. Hier wordt ",(0,t.jsx)(n.code,{children:"createRspackHtmlApp"})," gebruikt om een specifieke Rspack-applicatie-instantie voor Preact+HTM te cre\xebren."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"server"}),"-functie: Verantwoordelijk voor het cre\xebren en configureren van de HTTP-server, integreert Gez-middleware om SSR-verzoeken te verwerken."]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"entryserverts",children:["entry.server.ts",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entryserverts",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["Maak het server-side rendering invoerbestand ",(0,t.jsx)(n.code,{children:"src/entry.server.ts"})," aan:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.server.ts"',children:"/**\n * @file Server-side rendering invoerbestand\n * @description Verantwoordelijk voor het server-side renderingproces, HTML-generatie en resource-injectie\n */\n\nimport type { RenderContext } from '@gez/core';\nimport type { VNode } from 'preact';\nimport { render } from 'preact-render-to-string';\nimport { createApp } from './create-app';\n\nexport default async (rc: RenderContext) => {\n    // Cre\xeber applicatie-instantie\n    const { app } = createApp();\n\n    // Gebruik Preact's renderToString om pagina-inhoud te genereren\n    const html = render(app);\n\n    // Commit afhankelijkheidsverzameling, zorg ervoor dat alle benodigde resources worden geladen\n    await rc.commit();\n\n    // Genereer volledige HTML-structuur\n    rc.html = `<!DOCTYPE html>\n<html lang=\"nl-NL\">\n<head>\n    ${rc.preload()}\n    <title>Gez Snel Starten</title>\n    ${rc.css()}\n</head>\n<body>\n    <div id=\"app\">${html}</div>\n    ${rc.importmap()}\n    ${rc.moduleEntry()}\n    ${rc.modulePreload()}\n</body>\n</html>\n`;\n};\n"})}),"\n",(0,t.jsxs)(n.h2,{id:"project-uitvoeren",children:["Project uitvoeren",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#project-uitvoeren",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"Nadat je de bovenstaande bestanden hebt geconfigureerd, kun je de volgende commando's gebruiken om het project uit te voeren:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Ontwikkelmodus:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm run dev\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Project bouwen:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm run build\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:"Productieomgeving uitvoeren:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm run start\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Nu heb je succesvol een Preact+HTM SSR-applicatie gemaakt met het Gez-framework! Bezoek ",(0,t.jsx)(n.a,{href:"http://localhost:3000",target:"_blank",rel:"noopener noreferrer",children:"http://localhost:3000"})," om het resultaat te zien."]})]})}function s(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}let o=s;s.__RSPRESS_PAGE_META={},s.__RSPRESS_PAGE_META["nl%2Fguide%2Fframeworks%2Fpreact-htm.md"]={toc:[{text:"Projectstructuur",id:"projectstructuur",depth:2},{text:"Projectconfiguratie",id:"projectconfiguratie",depth:2},{text:"package.json",id:"packagejson",depth:3},{text:"tsconfig.json",id:"tsconfigjson",depth:3},{text:"Broncodestructuur",id:"broncodestructuur",depth:2},{text:"app.ts",id:"appts",depth:3},{text:"create-app.ts",id:"create-appts",depth:3},{text:"entry.client.ts",id:"entryclientts",depth:3},{text:"entry.node.ts",id:"entrynodets",depth:3},{text:"entry.server.ts",id:"entryserverts",depth:3},{text:"Project uitvoeren",id:"project-uitvoeren",depth:2}],title:"Preact+HTM",headingTitle:"Preact+HTM",frontmatter:{titleSuffix:"Gez Framework Preact+HTM SSR Applicatievoorbeeld",description:"Leer hoe je een Preact+HTM SSR-applicatie bouwt met het Gez-framework vanaf nul. Dit voorbeeld demonstreert de basisgebruik van het framework, inclusief projectinitialisatie, Preact-configuratie en instellingen voor het invoerbestand.",head:[["meta",{property:"keywords",content:"Gez, Preact, HTM, SSR-applicatie, TypeScript-configuratie, projectinitialisatie, server-side rendering, client-side interactie"}]]}}}}]);