"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["8627"],{68213:function(e,n,i){i.r(n),i.d(n,{default:()=>o});var r=i(31549),a=i(6603);function t(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",h3:"h3",ul:"ul",li:"li",strong:"strong",ol:"ol"},(0,a.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"van-componentdeling-naar-native-modulariteit-de-evolutie-van-het-gez-microfrontend-framework",children:["Van componentdeling naar native modulariteit: De evolutie van het Gez microfrontend-framework",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#van-componentdeling-naar-native-modulariteit-de-evolutie-van-het-gez-microfrontend-framework",children:"#"})]}),"\n",(0,r.jsxs)(n.h2,{id:"projectachtergrond",children:["Projectachtergrond",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#projectachtergrond",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"In de afgelopen jaren heeft de microfrontend-architectuur voortdurend gezocht naar de juiste weg. Echter, wat we zagen, waren diverse complexe technische oplossingen die met lagen van verpakkingen en kunstmatige isolatie een ideale microfrontend-wereld probeerden te simuleren. Deze oplossingen brachten zware prestatieverliezen met zich mee, maakten eenvoudige ontwikkeling complex en standaardprocessen onduidelijk."}),"\n",(0,r.jsxs)(n.h3,{id:"beperkingen-van-traditionele-oplossingen",children:["Beperkingen van traditionele oplossingen",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#beperkingen-van-traditionele-oplossingen",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"In de praktijk van microfrontend-architectuur hebben we de vele beperkingen van traditionele oplossingen diepgaand ervaren:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Prestatieverlies"}),": Runtime-injectie van afhankelijkheden, JS-sandbox-proxies, elke operatie verbruikt kostbare prestaties"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Broze isolatie"}),": Kunstmatig gecre\xeberde sandbox-omgevingen kunnen nooit de native isolatiecapaciteiten van de browser evenaren"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Complexiteit van bouwen"}),": Om afhankelijkheidsrelaties te behandelen, moesten bouwhulpmiddelen worden aangepast, waardoor eenvoudige projecten moeilijk te onderhouden werden"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Aangepaste regels"}),": Speciale implementatiestrategie\xebn, runtime-verwerking, elke stap wijkt af van standaard moderne ontwikkelingsprocessen"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Ecosysteembeperkingen"}),": Framework-koppeling, aangepaste API's, waardoor technologische keuzes gebonden waren aan specifieke ecosystemen"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Deze problemen kwamen vooral naar voren in een enterprise-project uit 2019. Een groot product was opgedeeld in meer dan tien onafhankelijke bedrijfssubsystemen, die een set basis- en bedrijfscomponenten moesten delen. Het oorspronkelijke op npm-pakketten gebaseerde componentdelingssysteem toonde ernstige onderhoudseffici\xebntieproblemen: wanneer gedeelde componenten werden bijgewerkt, moesten alle subsystemen die afhankelijk waren van deze componenten een volledig bouw- en implementatieproces doorlopen."}),"\n",(0,r.jsxs)(n.h2,{id:"technische-evolutie",children:["Technische evolutie",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#technische-evolutie",children:"#"})]}),"\n",(0,r.jsxs)(n.h3,{id:"v10-verkenning-van-externe-componenten",children:["v1.0: Verkenning van externe componenten",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#v10-verkenning-van-externe-componenten",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Om de effici\xebntieproblemen van componentdeling op te lossen, introduceerde Gez v1.0 een RemoteView-componentmechanisme op basis van het HTTP-protocol. Deze oplossing implementeerde runtime-dynamische aanvragen voor codeassemblage tussen services, wat het probleem van te lange bouwafhankelijkheidsketens succesvol oploste. Echter, door het ontbreken van een gestandaardiseerd runtime-communicatiemechanisme, bleven er effici\xebntieknelpunten bestaan in status- en gebeurtenissynchronisatie tussen services."}),"\n",(0,r.jsxs)(n.h3,{id:"v20-module-federation-poging",children:["v2.0: Module Federation-poging",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#v20-module-federation-poging",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["In versie v2.0 hebben we de ",(0,r.jsx)(n.a,{href:"https://webpack.js.org/concepts/module-federation/",target:"_blank",rel:"noopener noreferrer",children:"Module Federation"}),"-technologie van ",(0,r.jsx)(n.a,{href:"https://webpack.js.org/",target:"_blank",rel:"noopener noreferrer",children:"Webpack 5.0"})," geadopteerd. Deze technologie verbeterde de samenwerkingseffici\xebntie tussen services aanzienlijk door een uniform modulelaadmechanisme en runtime-containers. Echter, in grootschalige praktijken bracht de gesloten implementatiemechanismen van Module Federation nieuwe uitdagingen met zich mee: nauwkeurig afhankelijkheidsversiebeheer was moeilijk te realiseren, vooral bij het harmoniseren van gedeelde afhankelijkheden van meerdere services, waarbij vaak versieconflicten en runtime-uitzonderingen optraden."]}),"\n",(0,r.jsxs)(n.h2,{id:"omarmen-van-het-esm-tijdperk",children:["Omarmen van het ESM-tijdperk",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#omarmen-van-het-esm-tijdperk",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Bij het plannen van versie v3.0 hebben we de ontwikkelingsrichting van het frontend-ecosysteem diepgaand geobserveerd en ontdekt dat de vooruitgang in native browserfunctionaliteiten nieuwe mogelijkheden bood voor microfrontend-architectuur:"}),"\n",(0,r.jsxs)(n.h3,{id:"gestandaardiseerd-modulesysteem",children:["Gestandaardiseerd modulesysteem",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#gestandaardiseerd-modulesysteem",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["Met de brede ondersteuning van ",(0,r.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules",target:"_blank",rel:"noopener noreferrer",children:"ES Modules"})," door mainstream browsers en de volwassenheid van de ",(0,r.jsx)(n.a,{href:"https://github.com/WICG/import-maps",target:"_blank",rel:"noopener noreferrer",children:"Import Maps"}),"-specificatie, is frontend-ontwikkeling een echt modulair tijdperk ingegaan. Volgens statistieken van ",(0,r.jsx)(n.a,{href:"https://caniuse.com/?search=importmap",target:"_blank",rel:"noopener noreferrer",children:"Can I Use"})," heeft de native ondersteuning voor ESM in mainstream browsers (Chrome >= 89, Edge >= 89, Firefox >= 108, Safari >= 16.4) een percentage van 93,5% bereikt, wat ons de volgende voordelen biedt:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Gestandaardiseerd afhankelijkheidsbeheer"}),": Import Maps biedt de mogelijkheid om moduleafhankelijkheden op browserniveau op te lossen, zonder complexe runtime-injectie"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Optimalisatie van bronbelasting"}),": Het native modulecachemechanisme van de browser verbetert de bronbelastingseffici\xebntie aanzienlijk"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Vereenvoudiging van bouwprocessen"}),": De op ESM gebaseerde ontwikkelingsmodus maakt bouwprocessen voor ontwikkelings- en productieomgevingen consistenter"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Tegelijkertijd kunnen we, door ondersteuning voor compatibiliteitsmodi (Chrome >= 87, Edge >= 88, Firefox >= 78, Safari >= 14), de browserdekking verder verhogen tot 96,81%, waardoor we hoge prestaties kunnen behouden zonder ondersteuning voor oudere browsers op te offeren."}),"\n",(0,r.jsxs)(n.h3,{id:"doorbraken-in-prestaties-en-isolatie",children:["Doorbraken in prestaties en isolatie",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#doorbraken-in-prestaties-en-isolatie",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Het native modulesysteem brengt niet alleen standaardisatie, maar ook een kwalitatieve verbetering in prestaties en isolatie:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Geen runtime-overhead"}),": Afscheid van JavaScript-sandbox-proxies en runtime-injectie in traditionele microfrontend-oplossingen"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Betrouwbare isolatiemechanismen"}),": De strikte modulescope van ESM biedt van nature de meest betrouwbare isolatiecapaciteiten"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Nauwkeurig afhankelijkheidsbeheer"}),": Statische importanalyse maakt afhankelijkheidsrelaties duidelijker en versiebeheer preciezer"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"keuze-van-bouwhulpmiddelen",children:["Keuze van bouwhulpmiddelen",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#keuze-van-bouwhulpmiddelen",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Bij de implementatie van technische oplossingen was de keuze van bouwhulpmiddelen een cruciaal beslissingspunt. Na bijna een jaar van technisch onderzoek en praktijk, heeft onze keuze de volgende evolutie doorgemaakt:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Verkenning van Vite"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Voordeel: Op ESM gebaseerde ontwikkelserver, biedt een ultieme ontwikkelingservaring"}),"\n",(0,r.jsx)(n.li,{children:"Uitdaging: Verschillen tussen ontwikkelings- en productieomgevingen brachten enige onzekerheid met zich mee"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.strong,{children:[(0,r.jsx)(n.a,{href:"https://www.rspack.dev/",target:"_blank",rel:"noopener noreferrer",children:"Rspack"})," vaststellen"]})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Prestatievoordeel: Op ",(0,r.jsx)(n.a,{href:"https://www.rust-lang.org/",target:"_blank",rel:"noopener noreferrer",children:"Rust"})," gebaseerde high-performance compilatie, verbetert de bouwsnelheid aanzienlijk"]}),"\n",(0,r.jsx)(n.li,{children:"Ecosysteemondersteuning: Hoge compatibiliteit met het Webpack-ecosysteem, verlaagt migratiekosten"}),"\n",(0,r.jsx)(n.li,{children:"ESM-ondersteuning: Praktijkervaring met het Rslib-project bevestigde de betrouwbaarheid van ESM-bouw"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Deze beslissing stelde ons in staat om een stabielere ondersteuning voor productieomgevingen te krijgen terwijl de ontwikkelingservaring behouden bleef. Op basis van de combinatie van ESM en Rspack hebben we uiteindelijk een high-performance, weinig invasieve microfrontend-oplossing gebouwd."}),"\n",(0,r.jsxs)(n.h2,{id:"toekomstperspectief",children:["Toekomstperspectief",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#toekomstperspectief",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"In de toekomstige ontwikkelingsplannen zal het Gez-framework zich richten op de volgende drie richtingen:"}),"\n",(0,r.jsxs)(n.h3,{id:"diepgaande-optimalisatie-van-import-maps",children:["Diepgaande optimalisatie van Import Maps",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#diepgaande-optimalisatie-van-import-maps",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Dynamisch afhankelijkheidsbeheer"}),": Implementatie van intelligente runtime-afhankelijkheidsversiescheduling om afhankelijkheidsconflicten tussen meerdere applicaties op te lossen"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Preload-strategie\xebn"}),": Op routeanalyse gebaseerde intelligente preloading om bronbelastingseffici\xebntie te verbeteren"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Bouwoptimalisatie"}),": Automatische generatie van optimale Import Maps-configuraties om handmatige configuratiekosten voor ontwikkelaars te verminderen"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"framework-onafhankelijke-routeringsoplossing",children:["Framework-onafhankelijke routeringsoplossing",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#framework-onafhankelijke-routeringsoplossing",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Uniforme routeringsabstractie"}),": Ontwerp van een framework-onafhankelijke routeringsinterface ter ondersteuning van mainstream frameworks zoals Vue, React"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Microapplicatieroutering"}),": Implementatie van routeringskoppeling tussen applicaties om URL- en applicatiestatusconsistentie te behouden"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Routeringsmiddleware"}),": Uitbreidbaar middlewaremechanisme ter ondersteuning van functies zoals toegangscontrole en paginatransities"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"beste-praktijken-voor-cross-framework-communicatie",children:["Beste praktijken voor cross-framework communicatie",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#beste-praktijken-voor-cross-framework-communicatie",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Voorbeeldapplicatie"}),": Bied een volledig voorbeeld van cross-framework communicatie, inclusief mainstream frameworks zoals Vue, React, Preact"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Statussynchronisatie"}),": Op ESM gebaseerde lichtgewicht statusdelingsoplossing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Gebeurtenisbus"}),": Gestandaardiseerd gebeurteniscommunicatiemechanisme ter ondersteuning van ontkoppelde communicatie tussen applicaties"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Met deze optimalisaties en uitbreidingen hopen we Gez te maken tot een meer compleet en gebruiksvriendelijk microfrontend-oplossing, dat ontwikkelaars een betere ontwikkelingservaring en hogere ontwikkelingssnelheid biedt."})]})}function s(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(t,{...e})}):t(e)}let o=s;s.__RSPRESS_PAGE_META={},s.__RSPRESS_PAGE_META["nl%2Fblog%2Fbirth-of-gez.md"]={toc:[{text:"Projectachtergrond",id:"projectachtergrond",depth:2},{text:"Beperkingen van traditionele oplossingen",id:"beperkingen-van-traditionele-oplossingen",depth:3},{text:"Technische evolutie",id:"technische-evolutie",depth:2},{text:"v1.0: Verkenning van externe componenten",id:"v10-verkenning-van-externe-componenten",depth:3},{text:"v2.0: Module Federation-poging",id:"v20-module-federation-poging",depth:3},{text:"Omarmen van het ESM-tijdperk",id:"omarmen-van-het-esm-tijdperk",depth:2},{text:"Gestandaardiseerd modulesysteem",id:"gestandaardiseerd-modulesysteem",depth:3},{text:"Doorbraken in prestaties en isolatie",id:"doorbraken-in-prestaties-en-isolatie",depth:3},{text:"Keuze van bouwhulpmiddelen",id:"keuze-van-bouwhulpmiddelen",depth:3},{text:"Toekomstperspectief",id:"toekomstperspectief",depth:2},{text:"Diepgaande optimalisatie van Import Maps",id:"diepgaande-optimalisatie-van-import-maps",depth:3},{text:"Framework-onafhankelijke routeringsoplossing",id:"framework-onafhankelijke-routeringsoplossing",depth:3},{text:"Beste praktijken voor cross-framework communicatie",id:"beste-praktijken-voor-cross-framework-communicatie",depth:3}],title:"Van componentdeling naar native modulariteit: De evolutie van het Gez microfrontend-framework",headingTitle:"Van componentdeling naar native modulariteit: De evolutie van het Gez microfrontend-framework",frontmatter:{titleSuffix:"Van microfrontend-uitdagingen naar ESM-innovatie: De evolutie van het Gez-framework",description:"Een diepgaande verkenning van de evolutie van het Gez-framework, van de beperkingen van traditionele microfrontend-architecturen naar innovatieve doorbraken gebaseerd op ESM. Deel technische praktijkervaringen op het gebied van prestatieoptimalisatie, afhankelijkheidsbeheer en keuze van bouwhulpmiddelen.",head:[["meta",{property:"keywords",content:"Gez, microfrontend-framework, ESM, Import Maps, Rspack, Module Federation, afhankelijkheidsbeheer, prestatieoptimalisatie, technische evolutie, server-side rendering"}]],sidebar:!1}}}}]);